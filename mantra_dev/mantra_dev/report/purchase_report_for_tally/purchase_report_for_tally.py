import frappe
from frappe import _

def execute(filters=None):
    if not filters:
        filters = {}

    columns, data = [], []

    columns = [
        _("VoucherType") + ":Data:120",
        _("VoucherNumber") + ":Link/Purchase Invoice:120",
        _("Date") + ":Date:120",
        _("Supplier Inv No") + ":Data:120",
        _("Sup. Date") + ":Date:120",
        _("PartyName") + ":Data:120",
        _("Tracking") + ":Data:120",
        _("Receipt Date") + ":Date:120",
        _("Receipt Doc no") + ":Data:120",
        _("Dispatch Through") + ":Data:120",
        _("Destination") + ":Data:120",
        _("Carrier Name") + ":Data:120",
        _("Bill of Lading") + ":Data:120",
        _("Bill of Landing Date") + ":Date:120",
        _("Order No.") + ":Link/Purchase Order:120",
        _("Order Date") + ":Date:120",
        _("Terms of Payment") + ":Data:120",
        _("Supplier Name") + ":Data:120",
        _("Address 1") + ":Data:120",
        _("Address 2") + ":Data:120",
        _("Address 3") + ":Data:120",
        _("State") + ":Data:120",
        _("Country") + ":Data:120",
        _("Pincode") + ":Data:120",
        _("GSTIN") + ":Data:120",
        _("Buyers Name") + ":Data:120",
        _("Buyers Address 1") + ":Data:120",
        _("Buyers Address 2") + ":Data:120",
        _("Buyers Address 3") + ":Data:120",
        _("Buyers State") + ":Data:120",
        _("Buyers Country") + ":Data:120",
        _("Buyers Pincode") + ":Data:120",
        _("Buyers GSTIN") + ":Data:120",
        _("Ledger Amount") + ":Currency:120",
        _("Amount Type") + ":Data:120",
        _("New Ref") + ":Data:120",
        _("Ref Name") + ":Data:120",
        _("PO Number") + ":Link/Purchase Order:120",
        _("PO Date") + ":Date:120",
        _("Due Date / Days") + ":Date:120",
        _("Amount") + ":Currency:120",
        _("Purchase Ledger") + ":Data:120",
        _("Nature of Transaction") + ":Data:120",
        _("Item Name") + ":Data:120",
        _("ItemDesc1") + ":Data:120",
        _("ItemDesc2") + ":Data:120",
        _("ItemDesc3") + ":Data:120",
        _("Godown") + ":Data:120",
        _("Actual Qty") + ":Float:120",
        _("Billed Qty") + ":Float:120",
        _("Discount") + ":Currency:120",
        _("UOM") + ":Data:120",
        _("Rate") + ":Currency:120",
        _("Amount") + ":Currency:120",
        _("TaxName1") + ":Data:120",
        _("TaxRate1") + ":Percent:120",
        _("TaxAmount1") + ":Currency:120",
        _("TaxName2") + ":Data:120",
        _("TaxRate2") + ":Percent:120",
        _("TaxAmount2") + ":Currency:120",
        _("TaxName3") + ":Data:120",
        _("TaxRate3") + ":Percent:120",
        _("TaxAmount3") + ":Currency:120",
        _("TaxName4") + ":Data:120",
        _("TaxRate4") + ":Percent:120",
        _("TaxAmount4") + ":Currency:120",
        _("TaxName5") + ":Data:120",
        _("TaxRate5") + ":Percent:120",
        _("TaxAmount5") + ":Currency:120",
        _("Bill of entry no.") + ":Data:120",
        _("Bill of Entry Date") + ":Date:120",
        _("Port code") + ":Data:120",
        _("Narration") + ":Data:120",
        _("Department/Class") + ":Data:120"
    ]

    data = frappe.db.sql("""
        SELECT 
            pi.custom_invoice_type AS "VoucherType",
            pi.name AS "VoucherNumber",
            pi.posting_date AS "Date",
            pi.bill_no AS "Supplier Inv No",
            pi.bill_date AS "Sup. Date",
            pi.supplier_name AS "PartyName",
            pii.purchase_receipt AS "Tracking",
            pr.posting_date AS "Receipt Date",
            pii.purchase_receipt AS "Receipt Doc no",
            '' AS "Dispatch Through",
            '' AS "Destination",
            '' AS "Carrier Name",
            '' AS "Bill of Lading",
            '' AS "Bill of Landing Date",
            pii.purchase_order AS "Order No.",
            po.transaction_date AS "Order Date",
            pi.payment_terms_template AS "Terms of Payment",
            pi.supplier_name AS "Supplier Name",
            sa.address_line1 AS "Address 1",
            sa.address_line2 AS "Address 2",
            sa.city AS "Address 3",
            sa.state AS "State",
            sa.country AS "Country",
            sa.pincode AS "Pincode",
            sa.gstin AS "GSTIN",
            pi.company AS "Buyers Name",
            ca.address_line1 AS "Buyers Address 1",
            ca.address_line2 AS "Buyers Address 2",
            ca.city AS "Buyers Address 3",
            ca.state AS "Buyers State",
            ca.country AS "Buyers Country",
            ca.pincode AS "Buyers Pincode",
            ca.gstin AS "Buyers GSTIN",
            pi.base_grand_total AS "Ledger Amount",
            'CR' AS "Amount Type",
            'New Ref' AS "New Ref",
            pi.bill_no AS "Ref Name",
            pii.purchase_order AS "PO Number",
            po.transaction_date AS "PO Date",
            pi.due_date AS "Due Date / Days",
            pi.base_total AS "Amount",
            pii.expense_account AS "Purchase Ledger",
            pi.taxes_and_charges AS "Nature of Transaction",
            CONCAT(pii.item_code, ' ', pii.item_name) AS "Item Name",
            pii.custom_item_description AS "ItemDesc1",
            pii.custom_note AS "ItemDesc2",
            '' AS "ItemDesc3",
            pii.warehouse AS "Godown",
            pii.qty AS "Actual Qty",
            pii.qty AS "Billed Qty",
            pii.discount_amount AS "Discount",
            pii.uom AS "UOM",
            pii.rate AS "Rate",
            pii.base_amount AS "Amount",
            'Input CGST' AS "TaxName1",
            pii.cgst_rate AS "TaxRate1",
            pii.cgst_amount AS "TaxAmount1",
            'Input SGST' AS "TaxName2",
            pii.sgst_rate AS "TaxRate2",
            pii.sgst_amount AS "TaxAmount2",
            'Input IGST' AS "TaxName3",
            pii.igst_rate AS "TaxRate3",
            pii.igst_amount AS "TaxAmount3",
            pt.account_head AS "TaxName4",
            pt.rate AS "TaxRate4",
            pt.tax_amount AS "TaxAmount4",
            '' AS "TaxName5",
            '' AS "TaxRate5",
            '' AS "TaxAmount5",
            be.name AS "Bill of entry no.",
            be.bill_of_entry_date AS "Bill of Entry Date",
            be.port_code AS "Port code",
            pi.custom_narration AS "Narration",
            pi.cost_center AS "Department/Class"
        FROM `tabPurchase Invoice` pi
        JOIN `tabPurchase Invoice Item` pii ON pii.parent = pi.name
        LEFT JOIN `tabPurchase Order` po ON pii.purchase_order = po.name
        LEFT JOIN `tabPurchase Receipt` pr ON pr.name = pii.purchase_receipt
        LEFT JOIN `tabAddress` sa ON sa.name = pi.supplier_address
        LEFT JOIN `tabAddress` ca ON ca.name = pi.billing_address
        LEFT JOIN `tabBill of Entry` be ON be.purchase_invoice = pi.name
        LEFT JOIN `tabPurchase Taxes and Charges` pt ON pt.parent = pi.name
        WHERE pi.docstatus = 1 AND pi.posting_date BETWEEN %(from_date)s AND %(to_date)s
        ORDER BY pii.parent
    """, filters, as_dict=True)

    return columns, data
