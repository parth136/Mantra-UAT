from __future__ import unicode_literals
import frappe
from frappe import _

def execute(filters=None):
    columns, data = get_columns(), get_data(filters)
    return columns, data

def get_columns():
    return [
        {"label": _("VoucherType"), "fieldname": "voucher_type", "fieldtype": "Data", "width": 150},
        {"label": _("VoucherNumber"), "fieldname": "voucher_number", "fieldtype": "Link", "options": "Purchase Invoice", "width": 150},
        {"label": _("Date"), "fieldname": "date", "fieldtype": "Date", "width": 100},
        {"label": _("Supplier Inv No"), "fieldname": "supplier_inv_no", "fieldtype": "Data", "width": 150},
        {"label": _("Sup. Date"), "fieldname": "sup_date", "fieldtype": "Date", "width": 100},
        {"label": _("PartyName"), "fieldname": "party_name", "fieldtype": "Data", "width": 200},
        {"label": _("Approval Status"), "fieldname": "approval_status", "fieldtype": "Data", "width": 150},
        {"label": _("Tracking"), "fieldname": "tracking", "fieldtype": "Link", "options": "Purchase Receipt", "width": 150},
        {"label": _("Receipt Date"), "fieldname": "receipt_date", "fieldtype": "Date", "width": 100},
        {"label": _("Receipt Doc no"), "fieldname": "receipt_doc_no", "fieldtype": "Data", "width": 150},
        {"label": _("Dispatch Through"), "fieldname": "dispatch_through", "fieldtype": "Data", "width": 150},
        {"label": _("Destination"), "fieldname": "destination", "fieldtype": "Data", "width": 150},
        {"label": _("Carrier Name"), "fieldname": "carrier_name", "fieldtype": "Data", "width": 150},
        {"label": _("Bill of Lading"), "fieldname": "bill_of_lading", "fieldtype": "Data", "width": 150},
        {"label": _("Bill of Landing Date"), "fieldname": "bill_of_landing_date", "fieldtype": "Date", "width": 100},
        {"label": _("Order No."), "fieldname": "order_no", "fieldtype": "Link", "options": "Purchase Order", "width": 150},
        {"label": _("Order Date"), "fieldname": "order_date", "fieldtype": "Date", "width": 100},
        {"label": _("Terms of Payment"), "fieldname": "terms_of_payment", "fieldtype": "Data", "width": 150},
        {"label": _("Supplier Name"), "fieldname": "supplier_name", "fieldtype": "Data", "width": 200},
        {"label": _("Address 1"), "fieldname": "address_1", "fieldtype": "Data", "width": 200},
        {"label": _("Address 2"), "fieldname": "address_2", "fieldtype": "Data", "width": 200},
        {"label": _("Address 3"), "fieldname": "address_3", "fieldtype": "Data", "width": 200},
        {"label": _("State"), "fieldname": "state", "fieldtype": "Data", "width": 100},
        {"label": _("Country"), "fieldname": "country", "fieldtype": "Data", "width": 100},
        {"label": _("Pincode"), "fieldname": "pincode", "fieldtype": "Data", "width": 100},
        {"label": _("GSTIN"), "fieldname": "gstin", "fieldtype": "Data", "width": 150},
        {"label": _("Buyers Name"), "fieldname": "buyers_name", "fieldtype": "Data", "width": 200},
        {"label": _("Buyers Address 1"), "fieldname": "buyers_address_1", "fieldtype": "Data", "width": 200},
        {"label": _("Buyers Address 2"), "fieldname": "buyers_address_2", "fieldtype": "Data", "width": 200},
        {"label": _("Buyers Address 3"), "fieldname": "buyers_address_3", "fieldtype": "Data", "width": 200},
        {"label": _("Buyers State"), "fieldname": "buyers_state", "fieldtype": "Data", "width": 100},
        {"label": _("Buyers Country"), "fieldname": "buyers_country", "fieldtype": "Data", "width": 100},
        {"label": _("Buyers Pincode"), "fieldname": "buyers_pincode", "fieldtype": "Data", "width": 100},
        {"label": _("Buyers GSTIN"), "fieldname": "buyers_gstin", "fieldtype": "Data", "width": 150},
        {"label": _("Ledger Amount"), "fieldname": "ledger_amount", "fieldtype": "Float", "width": 100},
        {"label": _("Amount Type"), "fieldname": "amount_type", "fieldtype": "Data", "width": 100},
        {"label": _("New Ref"), "fieldname": "new_ref", "fieldtype": "Data", "width": 100},
        {"label": _("Ref Name"), "fieldname": "ref_name", "fieldtype": "Data", "width": 150},
        {"label": _("PO Number"), "fieldname": "po_number", "fieldtype": "Link", "options": "Purchase Order", "width": 150},
        {"label": _("PO Date"), "fieldname": "po_date", "fieldtype": "Date", "width": 100},
        {"label": _("Due Date / Days"), "fieldname": "due_date", "fieldtype": "Date", "width": 100},
        {"label": _("Amount"), "fieldname": "amount", "fieldtype": "Float", "width": 100},
        {"label": _("Purchase Ledger"), "fieldname": "purchase_ledger", "fieldtype": "Data", "width": 150},
        {"label": _("Nature of Transaction"), "fieldname": "nature_of_transaction", "fieldtype": "Data", "width": 150},
        {"label": _("Item Name"), "fieldname": "item_name", "fieldtype": "Data", "width": 200},
        {"label": _("ItemDesc1"), "fieldname": "item_desc1", "fieldtype": "Data", "width": 200},
        {"label": _("ItemDesc2"), "fieldname": "item_desc2", "fieldtype": "Data", "width": 200},
        {"label": _("ItemDesc3"), "fieldname": "item_desc3", "fieldtype": "Data", "width": 200},
        {"label": _("Godown"), "fieldname": "godown", "fieldtype": "Data", "width": 150},
        {"label": _("Actual Qty"), "fieldname": "actual_qty", "fieldtype": "Float", "width": 100},
        {"label": _("Billed Qty"), "fieldname": "billed_qty", "fieldtype": "Float", "width": 100},
        {"label": _("Discount"), "fieldname": "discount", "fieldtype": "Float", "width": 100},
        {"label": _("UOM"), "fieldname": "uom", "fieldtype": "Data", "width": 100},
        {"label": _("Rate"), "fieldname": "rate", "fieldtype": "Float", "width": 100},
        {"label": _("Amount"), "fieldname": "amount", "fieldtype": "Float", "width": 100},
        {"label": _("TaxName1"), "fieldname": "tax_name1", "fieldtype": "Data", "width": 150},
        {"label": _("TaxRate1"), "fieldname": "tax_rate1", "fieldtype": "Float", "width": 100},
        {"label": _("TaxAmount1"), "fieldname": "tax_amount1", "fieldtype": "Float", "width": 100},
        {"label": _("TaxName2"), "fieldname": "tax_name2", "fieldtype": "Data", "width": 150},
        {"label": _("TaxRate2"), "fieldname": "tax_rate2", "fieldtype": "Float", "width": 100},
        {"label": _("TaxAmount2"), "fieldname": "tax_amount2", "fieldtype": "Float", "width": 100},
        {"label": _("TaxName3"), "fieldname": "tax_name3", "fieldtype": "Data", "width": 150},
        {"label": _("TaxRate3"), "fieldname": "tax_rate3", "fieldtype": "Float", "width": 100},
        {"label": _("TaxAmount3"), "fieldname": "tax_amount3", "fieldtype": "Float", "width": 100},
        {"label": _("TaxName4"), "fieldname": "tax_name4", "fieldtype": "Data", "width": 150},
        {"label": _("TaxRate4"), "fieldname": "tax_rate4", "fieldtype": "Float", "width": 100},
        {"label": _("TaxAmount4"), "fieldname": "tax_amount4", "fieldtype": "Float", "width": 100},
        {"label": _("TaxName5"), "fieldname": "tax_name5", "fieldtype": "Data", "width": 150},
        {"label": _("TaxRate5"), "fieldname": "tax_rate5", "fieldtype": "Float", "width": 100},
        {"label": _("TaxAmount5"), "fieldname": "tax_amount5", "fieldtype": "Float", "width": 100},
        {"label": _("Bill of entry no."), "fieldname": "bill_of_entry_no", "fieldtype": "Link", "options": "Bill of Entry", "width": 150},
        {"label": _("Bill of Entry Date"), "fieldname": "bill_of_entry_date", "fieldtype": "Date", "width": 100},
        {"label": _("Port code"), "fieldname": "port_code", "fieldtype": "Data", "width": 100},
        {"label": _("Narration"), "fieldname": "narration", "fieldtype": "Data", "width": 200},
        {"label": _("Department/Class"), "fieldname": "department_class", "fieldtype": "Link", "options": "Cost Center", "width": 150}
    ]

def get_data(filters):
    conditions = ""
    if filters.get("from_date") and filters.get("to_date"):
        conditions = "pi.posting_date BETWEEN '{0}' AND '{1}'".format(filters.get("from_date"), filters.get("to_date"))

    data = frappe.db.sql("""
        SELECT 
            pi.custom_invoice_type AS voucher_type,
            pi.name AS voucher_number,
            pi.posting_date AS date,
            pi.bill_no AS supplier_inv_no,
            pi.bill_date AS sup_date,
            pi.supplier_name AS party_name,
            pi.workflow_state AS approval_status,
            pii.purchase_receipt AS tracking,
            pr.posting_date AS receipt_date,
            pii.purchase_receipt AS receipt_doc_no,
            " " AS dispatch_through,
            " " AS destination,
            " " AS carrier_name,
            " " AS bill_of_lading,
            " " AS bill_of_landing_date,
            pii.purchase_order AS order_no,
            po.transaction_date AS order_date,
            pi.payment_terms_template AS terms_of_payment,
            pi.supplier_name AS supplier_name,
            sa.address_line1 AS address_1,
            sa.address_line2 AS address_2,
            sa.city AS address_3,
            sa.state AS state,
            sa.country AS country,
            sa.pincode AS pincode,
            sa.gstin AS gstin,
            pi.company AS buyers_name,
            ca.address_line1 AS buyers_address_1,
            ca.address_line2 AS buyers_address_2,
            ca.city AS buyers_address_3,
            ca.state AS buyers_state,
            ca.country AS buyers_country,
            ca.pincode AS buyers_pincode,
            ca.gstin AS buyers_gstin,
            pi.base_grand_total AS ledger_amount,
            "CR" AS amount_type,
            "New Ref" AS new_ref,
            pi.bill_no AS ref_name,
            pii.purchase_order AS po_number,
            po.transaction_date AS po_date,
            pi.due_date AS due_date,
            pi.base_total AS amount,
            pii.expense_account AS purchase_ledger,
            pi.taxes_and_charges AS nature_of_transaction,
            CONCAT(pii.item_code, " ", pii.item_name) AS item_name,
            pii.custom_item_description AS item_desc1,
            pii.custom_note AS item_desc2,
            " " AS item_desc3,
            pii.warehouse AS godown,
            pii.qty AS actual_qty,
            pii.qty AS billed_qty,
            pii.discount_amount AS discount,
            pii.uom AS uom,
            pii.rate AS rate,
            pii.base_amount AS amount,
            "Input CGST" AS tax_name1,
            pii.cgst_rate AS tax_rate1,
            pii.cgst_amount AS tax_amount1,
            "Input SGST" AS tax_name2,
            pii.sgst_rate AS tax_rate2,
            pii.sgst_amount AS tax_amount2,
            "Input IGST" AS tax_name3,
            pii.igst_rate AS tax_rate3,
            pii.igst_amount AS tax_amount3,
            " " AS tax_name4,
            " " AS tax_rate4,
            " " AS tax_amount4,
            " " AS tax_name5,
            " " AS tax_rate5,
            " " AS tax_amount5,
            be.name AS bill_of_entry_no,
            be.bill_of_entry_date AS bill_of_entry_date,
            be.port_code AS port_code,
            pi.custom_narration AS narration,
            pi.cost_center AS department_class
        FROM `tabPurchase Invoice` AS pi
        JOIN `tabPurchase Invoice Item` AS pii ON pii.parent = pi.name
        LEFT JOIN `tabPurchase Order` AS po ON pii.purchase_order = po.name
        LEFT JOIN `tabPurchase Receipt` AS pr ON pr.name = pii.purchase_receipt
        LEFT JOIN `tabAddress` AS sa ON sa.name = pi.supplier_address
        LEFT JOIN `tabAddress` AS ca ON ca.name = pi.billing_address
        LEFT JOIN `tabBill of Entry` AS be ON be.purchase_invoice = pi.name
        WHERE pi.docstatus = 1
          AND {conditions}
        ORDER BY pii.parent
    """.format(conditions=conditions), as_dict=True)

    return data
